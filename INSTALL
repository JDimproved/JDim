[ make、実行方法 ]

動作環境

  gtkmm24-2.4.8 以上必須
  zlib-1.2 以上必須
  gnutls-1.2 以上必須
  kernel2.6以上推奨
  gtkmm2.8以上推奨 ( 2.6より低いとレイアウトが一部崩れる、2.8より低いとスレ一覧表示が遅い )
  UTF-8環境推奨 ( EUC環境では LANG="ja_JP.UTF-8" を指定する必要がある )

makeに必要なツール、ライブラリ

  autoconf
  automake
  libtool
  make
  gcc
  gcc-c++
  gtkmm24-devel
  zlib-devel
  gnutls-devel

make 方法( rpmbuild の場合 )

  rpmbuild -tb 〜.tgz でrpmファイルが出来るのであとは rpm -Uvh 〜.rpm
  ライブラリが足りないといわれたら yum install 〜-devel
  起動はメニューから起動するか、端末で jd と打ち込んでエンターを押す。

make 方法( configure + make の場合 )

  autoreconf -i ( 又は ./autogen.sh )
  ./configure
  make
  (お好みで) strip src/jd

configureオプション

  --with-sessionlib=[xsmp|gnomeui|no]

    GNOMEUIを使ってセッション管理をするには"gnomeui"を、セッション管理を無効にするには"no"を選択。デフォルトでは XSMPを使用する。

  --with-pangolayout

    描画にPangoLayoutを使う。デフォルトでは PangoGlyphString を使用する。

  --with-migemo

    migemoによる検索が有効になる。

    migemoがUTF-8の辞書でインストールされている必要がある。

  --with-[core2duo|athlon64]

    CPUに合わせた最適化

  --with-openssl

    GNU TLSではなく OpenSSLを使用する。

    ライセンス上バイナリ配布が出来なくなることに注意すること。

  --with-alsa

    ALSAによる効果音再生機能を有効にする。詳しくは"http://jd4linux.sourceforge.jp/manual/"の項を参照すること。

  --enable-gprof

    gprofによるプロファイリングを行う。コンパイルオプションに -pg が付き、JDを実行すると gmon.out が出来るのでgprof./jdgmon.out で解析できる。

    CPUの最適化は効かなくなるので注意する。

メモ

  ディストリ別の解説は"ディストリビューション別インストール方法[http://sourceforge.jp/projects/jd4linux/wiki/%E3%83%87%E3%82%A3%E3%82%B9%E3%83%88%E3%83%AA%E3%83%93%E3%83%A5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E5%88%A5%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E6%96%B9%E6%B3%95]" (wiki) を参照。

  最近のディストリビューションの場合は autogen.sh よりも autoreconf -i の方を推奨。

  実行するには直接 src/jd を起動するか手動で /usr/bin あたりに src/jd を cp する。

  以上の操作でmakeが通らなかったり動作が変な時は configure のオプションを変更する。


<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="install.xsl"?>

<document header="インストール方法補足、及びディストロ別インストール方法" modified="20070310">


<dist name="Linux From Scratch">
<res>
<number>2</number>
<name>名無しさん</name> 
<mail>sage</mail>
<date>2006/08/01(火) 02:04:59 ID:NAwqBb9Y</date>
<content>
いきなり趣旨とはちょっと反するかもしれないので申し訳ないが、<br />
とりあえずLFSでソースからインストールする場合。<br />
READMEにも書いてあるんだけど、それに付け足し。<br />
LFSで入る以外に必要なもの。<br />
xlib(libsm,libice)<br />
glib>=2.6.0<br />
gtk>=2.6.0<br />
libsigc++>=2.0<br />
glibmm>=2.6.0<br />
gtkmm>=2.6.0<br />
openssl>=0.9<br />
Optional: libgnomeui>=2.0<br />
libgnomeuiを使う時は、<br />
$sed -i 's/^use_xsmp.*/use_xsmp=no/' configure.in<br />
$sed -i 's/^use_gnomeui.*/use_gnomeui=yes/' configure.in<br />
としておく。<br />
$./autogen.sh<br />
$./configure $arguments<br />
$make<br />
#make install<br />
gtkやglib以下の依存関係は複雑なので割愛。<br />
GNOME等でメニューに入れたいときは、同梱のjd.desktopを/usr/share/applications、<br />
jd.pngを/usr/share/pixmaps以下にインストール。
</content>
</res>
</dist>


<dist name="Gentoo">
<res>
<number>5</number>
<name>名無しさん</name>
<mail>sage</mail>
<date>2006/08/02(水) 01:16:43 ID:xq3j5ix+</date>
<content>
長くなって済みませんがGentooで手軽にCVSから最新版を入れる方法です。<br />
リリース版はebuildjpにあるのでそちらからインストール出来ます。<br />
<br />
・ /usr/local/myportage等の適当なディレクトリを作成し、<br />
  /etc/make.confのPORTDIR_OVERLAYへ追加する。<br />
・ /usr/local/myportage/www-client/jdへ以下のファイルを<br />
  jd-9999.ebuild等の名前で保存し、emerge jdして終わり。<br />
<br />
--------こっから--------<br />
# Copyright 1999-2006 Gentoo Foundation<br />
# Distributed under the terms of the GNU General Public License v2<br />
# $Header$<br />
<br />
inherit eutils cvs<br />
<br />
DESCRIPTION="gtk2 based 2ch browser written in C++"<br />
HOMEPAGE="http://sourceforge.jp/projects/jd4linux"<br />
SRC_URI=""<br />
<br />
ECVS_SERVER="cvs.sourceforge.jp:/cvsroot/jd4linux"<br />
ECVS_MODULE="jd"<br />
ECVS_BRANCH="HEAD"<br />
<br />
LICENSE="GPL-2"<br />
SLOT="0"<br />
KEYWORDS="~x86 ~amd64"<br />
IUSE="gnome"
<pre>RDEPEND=">=dev-cpp/gtkmm-2.6
       >=dev-cpp/glibmm-2.6
       >=dev-libs/libsigc++-2.0
       >=dev-libs/openssl-0.9.7
       gnome? ( >=dev-cpp/libgnomeuimm-2.0.0 )"
DEPEND="${RDEPEND}
       sys-devel/automake
       sys-devel/autoconf
       sys-devel/libtool"
S="${WORKDIR}/${ECVS_MODULE}"
src_unpack() {
       cvs_src_unpack
       cd ${S}
       if use gnome; then
               sed -i -e 's/^use_xsmp.*/use_xsmp=no/' configure.in || die
               sed -i -e 's/^use_gnomeui.*/use_gnomeui=yes/' configure.in || die
       fi
       sh autogen.sh || die "autogen.sh failed"
       sed -i -e '/^CXXFLAGS/s:-ggdb::' configure || die "sed failed"
}
src_install() {
       make DESTDIR="${D}" install || die "make install failed"
       doicon ${PN}.png
       domenu ${PN}.desktop
       dodoc COPYING README ChangeLog INSTALL
}
</pre>
--------ここまで--------
</content>
</res>
</dist>


<dist name="FedoraCore">
<other>
<p>Fedora Extras に含まれているので</p>
<div class="example">yum install jd</div>
<p>だけでOK。</p>
</other>

<res>
<number>9</number>
<name>名無しさん</name>
<mail>sage</mail>
<date>2006/08/05(土) 01:23:07 ID:PTY4PKcU</date>
<content>
こんにちは<br />
FC4ですがrpmbuildで簡単にバイナリパッケージ作れました。<br />
追加パッケージがいくつか必要でしたがyumでサクッと。<br />
<br />
ただ、カスタマイズしたり前からのアップグレードでクリーンインストールとは<br />
だいぶ違うかもしれないので、役に立つかどうか。
</content>
</res>

<res>
<number>11</number>
<name>作者 ★</name>
<mail>sage</mail>
<date>2006/08/28(月) 01:05:50 ID:xE0/NJmk00000000</date>
<content>
FC6T2<br />
<br />
開発環境込みでインストールして、yumの設定をしてから、<br />
<br />
yum install gtkmm24-devel<br />
<br />
あとは<br />
<br />
rpmbuild -tb ～.tgz<br />
<br />
だけ
</content>
</res>
</dist>


<dist name="Ubuntu">
<other>
ubuntu-jaの日本語セットアップヘルパからインストール可能です
</other>

<res>
<number>10</number>
<name>作者 ★</name>
<mail>sage</mail>
<date>2006/08/17(木) 22:20:59 ID:xlMhDdJ2</date>
<content>
Ubuntu-jp CD起動版でJDをインストールする方法<br />
<br />
メモリは512M、バージョンは6.06で試しました。普通にHDDにインストールした<br />
Ubuntuでも同じようにしてインストール出来ると思います。<br />
<br />
(1) synapticで必要なパッケージをインストールする<br />
<br />
設定→リポジトリで「コミュニティーによるメンテナンス」を選んでから<br />
<br />
libgtkmm-2.4-dev<br />
autoconf<br />
automake1.9<br />
libtool<br />
libssl-dev<br />
gcc<br />
g++<br />
make<br />
<br />
を検索で探してインストールする。途中でディスク容量が足りなくなったら<br />
sudo rm -f /var/cache/apt/archives/*.deb でディスクを空ける<br />
<br />
(2) makeする<br />
<br />
ディスク容量が足りない場合は/tmpあたりにjdのソースを解凍してmakeする<br />
<br />
./autogen.sh<br />
./configure<br />
make<br />
<br />
(3) src/jd で実行する
</content>
</res>
</dist>


<dist name="FreeBSD">

<res>
<number>916</number>
<name>FreeBSD User</name>
<mail>sage</mail>
<date>2007/01/22(月) 12:40:06 ID:qV2aC6Fa</date>
<content>
返事遅れて申し訳ないです。&gt;作者さん<br />
<br />
インストール方法、FreeBSDでのまとめです。<br />
<br />
<br />
まず、/usr/ports/x11-toolkits/gtkmm24をportinstall<br />
次にautoconf、automake、libtoolをGNUサイトからソースを持って来て<br />
./configure make make installする。(FreeBSDでは標準では付いていないので)<br />
zlib、opensslも公式サイトからソースとって来て<br />
./configure(ここの部分たしか./configの場合もあったような) make make install。<br />
<br />
portsを使ってもいいんだけど、いろいろ面倒になるだろうから<br />
今紹介した方法が手っ取り早いかと思います。<br />
<br />
あと、重要なのが<br />
/usr/ports/devel/gmakeをportinstallでインストールする。<br />
<br />
そしてJDのソース取って<br />
中に入り<br />
<br />
sh autogen.sh<br />
./configure<br />
gmake (makeではない)<br />
<br />
src/jdで起動。<br />
<br />
日本語おかしかったらごめんなさい。<br />
間違ってる所がある場合は指摘をお願いします。
</content>
</res>
</dist>



<dist name="Nexenta">

<res>
<number>92</number>
<name>名無しさん</name>
<mail>sage</mail>
<date>2007/02/19(月) 19:37:16 ID:kxhxXt6o</date>
<content>
Nexenta という GNU/OpenSolaris な環境で jd-1.8.8-beta070218 をビルドしてみました。<br />
必要なパッケージ、ビルド方法はについては<br />
「インストール方法補足、及びディストロ別インストール方法」の Ubuntu と同じです。<br />
# その Ubuntu の項目ですが、libgtkmm-2.4.dev は libgtkmm-2.4-dev の間違いかと。<br />
<br />
途中で timegm が未定義と言われるので、src/jdlib/misctime.cpp に<br />
ttp://zunda.freeshell.org/d/20050308.html#p05<br />
の中身をコピペしてみました。<br />
今度は ICONV_CONST が未定義と言われるので、src/jdlib/jdiconv.cpp に<br />
#define ICONV_CONST const<br />
を追加しました。<br />
さらに MSG_NOSIGNAL が未定義と言われるので、src/jdlib/loader.cpp に<br />
#define MSG_NOSIGNAL 0<br />
を追加しました。<br />
とりあえずこの3点の応急措置だけでうまくいくようです。
</content>
</res>
</dist>


<dist name="ArchLinux">

<res>
<number>85</number>
<name>28</name>
<mail>sage</mail>
<date>2007/02/21(水) 20:23:05 ID:H9gM2cIp</date>
<content>
少し前にArchLinuxでビルドできないと言っていた者です。<br />
以前はArchLinux-0.7.2-i686だったのですが、<br />
今回ArchLinux-0.8-beta-x86_64で試してみたところ、何事もなくビルドできました。<br />
0.8-beta-i686では未確認ですが、手順は以下の通りです。<br />
<br />
# pacman -S gtkmm<br />
$ autoreconf -i<br />
$ ./configure<br />
$ make
</content>
</res>
</dist>


<dist name="Debian GNU/Linux">
<other>
<p class="small">記載日:2007/03/10 by tamagodake</p>

<p>2007年2月9日、JDは<a href="http://packages.qa.debian.org/j/jd.html">Debian公式リポジトリ</a>で配布されるようになりました。( sargeを除く )
<br /><span class="small">3/10現在 testing にはまだ降りてきていません。</span></p>

<div>
バイナリパッケージは以下でインストール出来ます。( <a href="http://www.jp.debian.org/doc/manuals/apt-howto/">apt-get</a>でも可 )
<p class="example"># <a href="http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/">aptitude</a> install jd</p>
ソースパッケージを使ってビルドする事も可能です。( <a href="http://debian.fam.cx/index.php?AptGet#customize">参考</a> )
<p class="example"># apt-get build-dep jd<br />$ apt-get source jd</p>
</div>

<div>
<p>ソースパッケージ等を使わずにビルドに必要なパッケージをインストールする場合( testing/unstable )</p>
<p class="example">
# aptitude install libstdc++6-4.1-dev<br />
# aptitude install automake libgtkmm-2.4-dev libssl-dev libtool
<p class="small">
注) バーチャルパッケージの関係で場合によってはlibstdc++2.10-devが
入ってしまう事があるので、先にlibstdc++6-4.1-devを入れておいた方が無難
</p>
</p>

<div>
JDプロジェクトで配布しているソースのビルドについては<q><a href="make.xml">make、実行方法</a></q>を参照して下さい。
</div>

</div>

</other>

</dist>


</document>

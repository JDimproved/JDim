<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="install.xsl"?>

<document header="インストール方法補足、及びディストロ別インストール方法" modified="20070311">

<!--
 ##### 要素の説明 ######
 dist ： 下記の子要素に入っていない物はHTMLとして扱われます。
 res  ： レス表示用でHTMLの pre と同様です。最初に出現する改行以前を含めず、一行目のみ太字緑色で行間が広くなります。
 other： 一行目を変更しない事を除いて上記と同じです。

 一行目の変更はCSS2による物なので、CSS2に対応していないWebブラウザ(IEなど)では二行目以降と同じように表示されます。
-->

<dist name="Linux From Scratch">
<res>
2 名前：名無しさん [sage]：2006/08/01(火) 02:04:59 ID:NAwqBb9Y
いきなり趣旨とはちょっと反するかもしれないので申し訳ないが、
とりあえずLFSでソースからインストールする場合。
READMEにも書いてあるんだけど、それに付け足し。
LFSで入る以外に必要なもの。
xlib(libsm,libice)
glib&gt;=2.6.0
gtk&gt;=2.6.0
libsigc++&gt;=2.0
glibmm&gt;=2.6.0
gtkmm&gt;=2.6.0
openssl&gt;=0.9
Optional: libgnomeui&gt;=2.0
libgnomeuiを使う時は、
$sed -i 's/^use_xsmp.*/use_xsmp=no/' configure.in
$sed -i 's/^use_gnomeui.*/use_gnomeui=yes/' configure.in
としておく。
$./autogen.sh
$./configure $arguments
$make
#make install
gtkやglib以下の依存関係は複雑なので割愛。
GNOME等でメニューに入れたいときは、同梱のjd.desktopを/usr/share/applications、
jd.pngを/usr/share/pixmaps以下にインストール。
</res>
</dist>


<dist name="Gentoo">
<res>
5 名前：名無しさん [sage]：2006/08/02(水) 01:16:43 ID:xq3j5ix+
長くなって済みませんがGentooで手軽にCVSから最新版を入れる方法です。
リリース版はebuildjpにあるのでそちらからインストール出来ます。

・ /usr/local/myportage等の適当なディレクトリを作成し、
  /etc/make.confのPORTDIR_OVERLAYへ追加する。
・ /usr/local/myportage/www-client/jdへ以下のファイルを
  jd-9999.ebuild等の名前で保存し、emerge jdして終わり。

--------こっから--------
# Copyright 1999-2006 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header$

inherit eutils cvs

DESCRIPTION="gtk2 based 2ch browser written in C++"
HOMEPAGE="http://sourceforge.jp/projects/jd4linux"
SRC_URI=""

ECVS_SERVER="cvs.sourceforge.jp:/cvsroot/jd4linux"
ECVS_MODULE="jd"
ECVS_BRANCH="HEAD"

LICENSE="GPL-2"
SLOT="0"
KEYWORDS="~x86 ~amd64"
IUSE="gnome"

RDEPEND=">=dev-cpp/gtkmm-2.6
       >=dev-cpp/glibmm-2.6
       >=dev-libs/libsigc++-2.0
       >=dev-libs/openssl-0.9.7
       gnome? ( >=dev-cpp/libgnomeuimm-2.0.0 )"
DEPEND="${RDEPEND}
       sys-devel/automake
       sys-devel/autoconf
       sys-devel/libtool"
S="${WORKDIR}/${ECVS_MODULE}"
src_unpack() {
       cvs_src_unpack
       cd ${S}
       if use gnome; then
               sed -i -e 's/^use_xsmp.*/use_xsmp=no/' configure.in || die
               sed -i -e 's/^use_gnomeui.*/use_gnomeui=yes/' configure.in || die
       fi
       sh autogen.sh || die "autogen.sh failed"
       sed -i -e '/^CXXFLAGS/s:-ggdb::' configure || die "sed failed"
}
src_install() {
       make DESTDIR="${D}" install || die "make install failed"
       doicon ${PN}.png
       domenu ${PN}.desktop
       dodoc COPYING README ChangeLog INSTALL
}

--------ここまで--------
</res>
</dist>


<dist name="FedoraCore">
Fedora Extras に含まれているので
<p class="example">yum install jd</p>
だけでOK。

<res>
9 名前：名無しさん [sage]：2006/08/05(土) 01:23:07 ID:PTY4PKcU
こんにちは
FC4ですがrpmbuildで簡単にバイナリパッケージ作れました。
追加パッケージがいくつか必要でしたがyumでサクッと。

ただ、カスタマイズしたり前からのアップグレードでクリーンインストールとは
だいぶ違うかもしれないので、役に立つかどうか。
</res>

<res>
11 名前：作者 ★ [sage]：2006/08/28(月) 01:05:50 ID:xE0/NJmk00000000
FC6T2

開発環境込みでインストールして、yumの設定をしてから、

yum install gtkmm24-devel

あとは

rpmbuild -tb ～.tgz

だけ
</res>
</dist>


<dist name="Ubuntu">
ubuntu-jaの日本語セットアップヘルパからインストール可能です

<res>
10 名前：作者 ★ [sage]：2006/08/17(木) 22:20:59 ID:xlMhDdJ2
Ubuntu-jp CD起動版でJDをインストールする方法

メモリは512M、バージョンは6.06で試しました。普通にHDDにインストールした
Ubuntuでも同じようにしてインストール出来ると思います。

(1) synapticで必要なパッケージをインストールする

設定→リポジトリで「コミュニティーによるメンテナンス」を選んでから

libgtkmm-2.4-dev
autoconf
automake1.9
libtool
libssl-dev
gcc
g++
make

を検索で探してインストールする。途中でディスク容量が足りなくなったら
sudo rm -f /var/cache/apt/archives/*.deb でディスクを空ける

(2) makeする

ディスク容量が足りない場合は/tmpあたりにjdのソースを解凍してmakeする

./autogen.sh
./configure
make

(3) src/jd で実行する
</res>
</dist>


<dist name="FreeBSD">
<res>
916 名前：FreeBSD User [sage]：2007/01/22(月) 12:40:06 ID:qV2aC6Fa
返事遅れて申し訳ないです。&gt;作者さん

インストール方法、FreeBSDでのまとめです。


まず、/usr/ports/x11-toolkits/gtkmm24をportinstall
次にautoconf、automake、libtoolをGNUサイトからソースを持って来て
./configure make make installする。(FreeBSDでは標準では付いていないので)
zlib、opensslも公式サイトからソースとって来て
./configure(ここの部分たしか./configの場合もあったような) make make install。

portsを使ってもいいんだけど、いろいろ面倒になるだろうから
今紹介した方法が手っ取り早いかと思います。

あと、重要なのが
/usr/ports/devel/gmakeをportinstallでインストールする。

そしてJDのソース取って
中に入り

sh autogen.sh
./configure
gmake (makeではない)

src/jdで起動。

日本語おかしかったらごめんなさい。
間違ってる所がある場合は指摘をお願いします。
</res>
</dist>


<dist name="Nexenta">
<res>
92 名前：名無しさん [sage]：2007/02/19(月) 19:37:16 ID:kxhxXt6o
Nexenta という GNU/OpenSolaris な環境で jd-1.8.8-beta070218 をビルドしてみました。
必要なパッケージ、ビルド方法はについては
「インストール方法補足、及びディストロ別インストール方法」の Ubuntu と同じです。
# その Ubuntu の項目ですが、libgtkmm-2.4.dev は libgtkmm-2.4-dev の間違いかと。

途中で timegm が未定義と言われるので、src/jdlib/misctime.cpp に
ttp://zunda.freeshell.org/d/20050308.html#p05
の中身をコピペしてみました。
今度は ICONV_CONST が未定義と言われるので、src/jdlib/jdiconv.cpp に
#define ICONV_CONST const
を追加しました。
さらに MSG_NOSIGNAL が未定義と言われるので、src/jdlib/loader.cpp に
#define MSG_NOSIGNAL 0
を追加しました。
とりあえずこの3点の応急措置だけでうまくいくようです。
</res>
</dist>


<dist name="ArchLinux">
<res>
85 名前：28 [sage]：2007/02/21(水) 20:23:05 ID:H9gM2cIp
少し前にArchLinuxでビルドできないと言っていた者です。
以前はArchLinux-0.7.2-i686だったのですが、
今回ArchLinux-0.8-beta-x86_64で試してみたところ、何事もなくビルドできました。
0.8-beta-i686では未確認ですが、手順は以下の通りです。

# pacman -S gtkmm
$ autoreconf -i
$ ./configure
$ make
</res>
</dist>


<dist name="Debian GNU/Linux">
<p class="small">記載日:2007/03/10 by tamagodake</p>

<p>2007年2月9日、JDは<a href="http://packages.qa.debian.org/j/jd.html">Debian公式リポジトリ</a>で配布されるようになりました。( sargeを除く )<br />
<span class="small">3/10現在 testing にはまだ降りてきていません。</span></p>

<p>バイナリパッケージは以下でインストール出来ます。( <a href="http://www.jp.debian.org/doc/manuals/apt-howto/">apt-get</a>でも可 )</p>
<div class="example"># <a href="http://dolphin.c.u-tokyo.ac.jp/~nori1/aptitude-ja/">aptitude</a> install jd</div>
<p>ソースパッケージを使ってビルドする事も可能です。( <a href="http://debian.fam.cx/index.php?AptGet#customize">参考</a> )</p>
<div class="example"># apt-get build-dep jd<br />$ apt-get source jd</div>

<p>ソースパッケージ等を使わずにビルドに必要なパッケージをインストールする場合( testing/unstable )</p>
<div class="example">
# aptitude install libstdc++6-4.1-dev<br />
# aptitude install automake libgtkmm-2.4-dev libssl-dev libtool
<p class="small">
注) バーチャルパッケージの関係で場合によってはlibstdc++2.10-devが
入ってしまう事があるので、先にlibstdc++6-4.1-devを入れておいた方が無難
</p>
</div>

<p>
JDプロジェクトで配布しているソースのビルドについては<q><a href="make.xml">make、実行方法</a></q>を参照して下さい。
</p>
</dist>


</document>

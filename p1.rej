--- dom.cpp
+++ dom.cpp
@@ -39,6 +39,7 @@
         m_static_html_elements.insert( "br" );
         m_static_html_elements.insert( "hr" );
         m_static_html_elements.insert( "img" );
+        m_static_html_elements.insert( "input" );
         m_static_html_elements.insert( "link" );
         m_static_html_elements.insert( "meta" );
     }
@@ -188,7 +189,7 @@
                     current_pos = close_tag_gt_pos + 1;
 
                     // タグの中身を取り出す
-                    const std::string close_tag = str.substr( close_tag_lt_pos + 1, close_tag_gt_pos - close_tag_lt_pos - 1 );
+                    const std::string close_tag = MISC::tolower_str( str.substr( close_tag_lt_pos + 1, close_tag_gt_pos - close_tag_lt_pos - 1 ) );
 
                     // タグ構造が壊れてる場合
                     if( close_tag.empty() ) continue;
@@ -199,10 +200,10 @@
                     }
 
                     // 空要素でない同名の開始タグを見つけたらカウントを増やす
-                    if( close_tag.compare( 0, element_name.length(), element_name ) == 0 
+                    if( close_tag.compare( 0, name.length(), name ) == 0
                      && close_tag.compare( close_tag.length() - 1, 1, "/" ) != 0 ) ++count;
                     // 終了タグを見つけたらカウントを減らす
-                    else if( close_tag.compare( 0, element_name.length() + 1, "/" + element_name ) == 0 ) --count;
+                    else if( close_tag.compare( 0, name.length() + 1, "/" + name ) == 0 ) --count;
 
                     // 終了タグを見つける必要数が 0 になったらループを抜ける
                     if( count <= 0 ) break;
